When we have to execute parcel in our project then we have to write commands 
     npx parcel index.html---> for development
     npx parcel build index.html---> for production

To make our life easier what we do we make scripts in package.json that will build our project instead of writing these commands again and again. Making npm scripts is industry standard convention. These scripts helps us when we go to new company or working on new project and we dont know how to build that project we have to go to package.json and find package.json scripts and we will definitely finds some commands over there. we can run our scripts by: 
      npm run script name..

i.e to start our project we have to write command now:
  npm run start. //behind the scenes it executes a package parcel with index.html because we have configure this inside our package.json.

For production build we can write command without writing run but in production build we have to write run in it its necessary.

Creating an element in react in very difficult for developers so the facebook developers created something which is JSX which is javaScript syntax which makes easier to create react elements.

JSX is not html in javascript, it is a html-like syntax.
JSX behind the scenes work as React.createElement:
JSX --> React.createElement --> js object --> Html Element(render).
First jsx code is converted into ReactElement then it is readable by react.

If we have to give attribute to jsx then we have to use camelCase. And if the jsx code is more then one line then we have to wrap it in ().

COMPONENTS:
           There are two types of components:
           1: Class base components-Old way of writing code.
           2: Functional components-New way of writing code.

           
If a data is coming from an API and we execute that data in jsx using {} now what if an attacker sends some malicious data in this API and we are injecting the data from that API it our code which will executed, This type of attack is known as CROSS SITE SCRIPTING but JSX is so amazing that it takes care of this kind of injection attacks so the code which is executing in those {} jsx will not run it blindly it will sanitize our data before executing it So JSX prevents CROSS SITE SCRIPTING attacks.  

LECTURE  # 04 (Show me the code:)